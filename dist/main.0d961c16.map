{"version":3,"sources":["oval/main.js"],"names":["canvas","document","querySelector","ctx","getContext","env","width","window","innerWidth","height","innerHeight","particles","hue","random","min","max","Math","floor","deg","o","PI","distance","Particle","cx","cy","rx","ry","angle","x","cos","y","sin","v","coords","Array","fill","unshift","pop","end","length","strokeStyle","beginPath","moveTo","lineTo","stroke","update","init","argument","i","push","draw","requestAnimationFrame","fillStyle","fillRect","forEach","particle"],"mappings":"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","file":"main.0d961c16.map","sourceRoot":"..","sourcesContent":["const canvas = document.querySelector('canvas')\nconst ctx = canvas.getContext('2d')\nconst env = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    particles: [],\n    hue: 0\n}\n\nfunction random(min, max) {\n    return Math.floor(Math.random() * (max - min) + min)\n}\n\nfunction deg(o) {\n    return o * Math.PI / 180\n}\n\nfunction distance() {\n    // body...\n}\n\nclass Particle {\n    constructor() {\n        this.cx = env.width / 2\n        this.cy = env.height / 2\n        this.rx = random(100, 300)\n        this.ry = random(30, 100)\n        this.angle = random(0, 360)\n        this.x = Math.cos(deg(this.angle)) * this.rx + this.cx\n        this.y = Math.sin(deg(this.angle)) * this.ry + this.cy\n        this.v = random(1, 3)\n        this.coords = new Array(5).fill([this.x, this.y])\n    }\n    update() {\n        this.angle += 1\n        this.x = Math.cos(deg(this.angle)) * this.rx + this.cx\n        this.y = Math.sin(deg(this.angle)) * this.ry + this.cy\n        this.coords.unshift([this.x, this.y])\n        this.coords.pop()\n    }\n    draw() {\n        const end = this.coords.length - 1\n        ctx.strokeStyle = `hsl(${env.hue},100%, 70%)`;\n        ctx.beginPath();\n        ctx.moveTo(this.coords[end][0], this.coords[end][1]);\n        ctx.lineTo(this.x, this.y);\n        ctx.stroke();\n        this.update()\n    }\n}\n\nfunction init(argument) {\n    for (let i = 0; i < 1000; i++) {\n        env.particles.push(new Particle())\n    }\n    canvas.width = env.width\n    canvas.height = env.height\n\n    function draw() {\n        env.hue += .5\n        requestAnimationFrame(draw)\n        ctx.fillStyle = \"rgba(0,0,0,0.2)\";\n        ctx.fillRect(0, 0, env.width, env.height);\n        env.particles.forEach(particle => particle.draw())\n    }\n    draw()\n}\n\ninit()"]}