{"version":3,"sources":["collision/main.js"],"names":["canvas","document","querySelector","ctx","getContext","env","width","window","innerWidth","height","innerHeight","hue","circles","resolveCollision","circle1","circle2","resolveV1","v1","v2","m1","m2","resolveV2","fixPostion","x1","x","y1","y","r1","r","x2","y2","r2","disX","Math","abs","disY","disL","angle","atan2","cos","sin","m","vx1","vx","vy1","vy","vx2","vy2","predicateCollision","dis","distance","random","min","max","floor","sqrt","pow","deg","o","PI","Circle","forEach","circle","update","strokeStyle","beginPath","arc","stroke","init","i","push","draw","clearRect","requestAnimationFrame"],"mappings":"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","file":"main.9b6a51d6.map","sourceRoot":"..","sourcesContent":["const canvas = document.querySelector('canvas')\nconst ctx = canvas.getContext('2d')\nconst env = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    hue: 120,\n    circles: []\n}\n\nfunction resolveCollision(circle1, circle2) {\n    function resolveV1(v1, v2, m1, m2) {\n        return ((m1 - m2) * v1 + 2 * m2 * v2) / (m1 + m2)\n    }\n\n    function resolveV2(v1, v2, m1, m2) {\n        return (2 * m1 * v1 + (m2 - m1) * v2) / (m1 + m2)\n    }\n\n    function fixPostion(circle1, circle2) {\n        const { x: x1, y: y1, r: r1 } = circle1\n        const { x: x2, y: y2, r: r2 } = circle2\n        const disX = Math.abs(x2 - x1)\n        const disY = Math.abs(y2 - y1)\n        const disL = r2 + r1\n        const angle = Math.atan2(disY, disX)\n        if (x1 < x2) {\n            circle1.x = circle2.x - Math.cos(angle) * disL\n        } else {\n            circle2.x = circle1.x - Math.cos(angle) * disL\n        }\n        if (y1 < y2) {\n            circle1.y = circle2.y - Math.sin(angle) * disL\n        } else {\n            circle2.y = circle1.y - Math.sin(angle) * disL\n        }\n    }\n    const { m: m1, vx: vx1, vy: vy1 } = circle1\n    const { m: m2, vx: vx2, vy: vy2 } = circle2\n    circle1.vx = resolveV1(vx1, vx2, m1, m2)\n    circle2.vx = resolveV2(vx1, vx2, m1, m2)\n    circle1.vy = resolveV1(vy1, vy2, m1, m2)\n    circle2.vy = resolveV2(vy1, vy2, m1, m2)\n    fixPostion(circle1, circle2)\n}\n\nfunction predicateCollision(circle1, circle2) {\n    const { x: x1, y: y1, r: r1 } = circle1\n    const { x: x2, y: y2, r: r2 } = circle2\n    const dis = distance(x1, y1, x2, y2)\n    return dis <= (r1 + r2)\n}\n\nfunction random(min, max) {\n    return Math.floor((max - min) * Math.random() + min)\n}\n\nfunction distance(x1, y1, x2, y2) {\n    const disX = x1 - x2\n    const disY = y1 - y2\n    return Math.sqrt(Math.pow(disX, 2) + Math.pow(disY, 2))\n}\n\nfunction deg(o) {\n    return Math.PI * o / 180\n}\n\nclass Circle {\n    constructor({ x, y }) {\n        this.x = x\n        this.y = y\n        this.vx = random(1, 5)\n        this.vy = random(1, 5)\n        this.r = 10\n        this.m = 1\n    }\n    update() {\n        this.x += this.vx\n        this.y += this.vy\n        env.circles.forEach(circle => {\n            if (this === circle) {\n                return\n            }\n            if (predicateCollision(this, circle)) {\n                resolveCollision(this, circle)\n            }\n        })\n        if (this.x - this.r < 0 || this.x + this.r > env.width) {\n            this.vx = -this.vx\n            if (this.x < this.r) {\n                this.x = this.r\n            } else {\n                this.x = env.width - this.r\n            }\n        }\n        if (this.y - this.r < 0 || this.y + this.r > env.height) {\n            this.vy = -this.vy\n\n            if (this.y < this.r) {\n                this.y = this.r\n            } else {\n                this.y = env.height - this.r\n            }\n        }\n    }\n    draw() {\n        this.update()\n        ctx.strokeStyle = `hsl(${env.hue},100%, 80%)`\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.r, 0, deg(360))\n        ctx.stroke();\n    }\n}\n\n\nfunction init() {\n    canvas.width = env.width\n    canvas.height = env.height\n    for (let i = 0; i < 100; i++) {\n        let x = random(0, env.width)\n        let y = random(0, env.width)\n        env.circles.forEach(circle => {\n            while (predicateCollision(circle, { x, y, r: 10 }) || x < 10 || y < 10 || x + 10 > env.width || y + 10 > env.height) {\n                x = random(0, env.width)\n                y = random(0, env.height)\n            }\n        })\n        env.circles.push(new Circle({ x, y }))\n    }\n\n    function draw() {\n        env.hue += .5\n        ctx.clearRect(0, 0, env.width, env.height);\n        env.circles.forEach(circle => circle.draw())\n        requestAnimationFrame(draw)\n    }\n    draw()\n}\n\ninit()"]}