{"version":3,"sources":["utils/game.js","demo6/main.js"],"names":["mountProtos","fnObj","obj","Object","keys","forEach","key","utils","deg","o","Math","PI","rDeg","random","min","max","floor","distance","x1","y1","x2","y2","disX","disY","sqrt","pow","Game","option","item","Error","canvas","document","querySelector","env","loopFn","loop","beforeLoop","console","log","init","width","height","ctx","getContext","bind","requestAnimationFrame","Point","x","range","y","splitSpace","len","spacing","xArray","i","push","renderWave","points","point","fillStyle","beginPath","arc","fill","strokeStyle","moveTo","reduce","prevPoint","nextPoint","cx","cy","quadraticCurveTo","stroke","window","innerWidth","innerHeight","pointLen","map","clearRect"],"mappings":"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","file":"main.e6960898.map","sourceRoot":"..","sourcesContent":["//(obj, obj) \n//将fnObj的属性复制给obj\nfunction mountProtos(fnObj, obj) {\n    Object.keys(fnObj).forEach(key => {\n        obj[key] = fnObj[key]\n    })\n}\n\nconst utils = {\n    //角度转弧度\n    deg(o) {\n        return Math.PI * o / 180\n    },\n\n    //弧度转角度\n    rDeg(deg) {\n        return deg * 180 / Math.PI\n    },\n\n    //随机数\n    random(min, max) {\n        return Math.floor(Math.random() * (max - min) + min)\n    },\n\n    //两点距离\n    distance([x1, y1], [x2, y2]) {\n        const disX = x1 - x2\n        const disY = y1 - y2\n        return Math.sqrt(Math.pow(disX, 2), Math.pow(disY, 2))\n    }\n}\n\n\n/*\noption:{\n    canvas: this html canvas element, can be css sleector or html element\n    env: width and height are required to initalize the canvas\n    loop: function to loop\n}\n */\nclass Game {\n    constructor(option) {\n        //toCheck the option params\n        [\"loop\", \"env\"].forEach(item => {\n            if (!option[item]) {\n                throw Error(`not hava ${item}`)\n            }\n        })\n        this.canvas = document.querySelector(option.canvas) || document.querySelector('canvas') || option.canvas\n        this.env = option.env\n        this.loopFn = option.loop\n        this.beforeLoop = option.beforeLoop || console.log\n        this.init()\n    }\n    init() {\n        this.canvas.width = this.env.width\n        this.canvas.height = this.env.height\n        this.ctx = this.canvas.getContext('2d')\n        this.loopFn = this.loopFn.bind(this)\n        this.beforeLoop()\n        this.loop()\n    }\n\n    loop() {\n        this.loopFn()\n        requestAnimationFrame(this.loop.bind(this))\n    }\n}\n\nmountProtos(utils, Game)\nexport default Game","import Game from '../utils/game.js'\nclass Point {\n    constructor({ ctx, x, range }) {\n        this.ctx = ctx\n        this.x = x\n        this.y = Game.random(100, 200)\n        this.range = range\n    }\n    update() {\n        this.y += Game.random(-10, 10)\n        if (this.y > this.range.max) {\n            this.y = this.range.max\n        } else if (this.y < this.range.min) {\n            this.y = this.range.min\n        }\n    }\n}\n\n// (int, int) -> [x]\nfunction splitSpace(len, width) {\n    const spacing = width / len\n    const xArray = []\n    for (let i = 0; i < len; i++) {\n        xArray.push(spacing * i)\n    }\n    xArray.push(width)\n    return xArray\n}\n\n// ([Point], ctx) -> effect!\nfunction renderWave(points, ctx) {\n    points.forEach(point => {\n        ctx.fillStyle = \"#fff\";\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, 3, 0, Game.deg(360))\n        ctx.fill();\n    })\n    ctx.beginPath()\n    ctx.strokeStyle = \"red\";\n    ctx.moveTo(points[0].x, points[0].y);\n    points.reduce((prevPoint, nextPoint) => {\n        const cx = (prevPoint.x + nextPoint.x) / 2\n        const cy = (prevPoint.y + nextPoint.y) / 2\n        ctx.quadraticCurveTo(cx, cy, nextPoint.x, nextPoint.y);\n        return nextPoint\n    })\n    ctx.stroke();\n}\n\n\nnew Game({\n    env: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        pointLen: 7,\n        points: [],\n        range: {\n            max: 200,\n            min: 100\n        }\n    },\n    beforeLoop() {\n        this.env.points = splitSpace(this.env.pointLen, this.env.width)\n            .map(x => new Point({ x, ctx: this.ctx, range: this.env.range }))\n    },\n    loop() {\n        this.ctx.clearRect(0, 0, this.env.width, this.env.height)\n        // this.env.points.forEach(point => point.update())\n        renderWave(this.env.points, this.ctx)\n    }\n})"]}